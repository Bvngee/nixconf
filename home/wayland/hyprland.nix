{ pkgs, config, ... }: {

  # Hyprland's HM module handles plugins and config generation.
  wayland.windowManager.hyprland = {
    enable = true;
    plugins = [
      pkgs.hyprlandPlugins.hyprsplit
    ];

    systemd.enable = true;
    systemd.enableXdgAutostart = true;
    # Produces `exec-once = dbus-update-activation-environment --systemd --all`
    systemd.variables = [ "--all" ];
    # # Systemd integration through the home manager module conflicts with UWSM.
    # systemd.enable = false;

    # Use the packages from the NixOS module as the main source of truth.
    # package = null;
    # portalPackage = null;

    extraConfig =
      let
        monitorConfig =
          if (config.profile.hostname == "pc") then ''
            monitor = DP-2, 2560x1440@75, 0x270, 1
            monitor = DP-1, 2560x1440@75, 2560x0, 1, transform, 1
          '' else ''
            monitor = , preferred, auto, 1
          '';
        hostSpecificConfig =
          if (config.profile.hostname == "precision") then
            ''
              # Autogenerated multi-gpu onfiguration
              env = AQ_DRM_DEVICES,/dev/dri/card1:/dev/dri/card0
            ''
          else "";
      in
      "\n" + ''
        ${hostSpecificConfig}

        # Tell hyprland to use systemd-provided seat management (via logind).
        # Fixed a hyprland-specific crash with seatd; not sure if still needed
        env = LIBSEAT_BACKEND,logind

        # Autogenerated monitor configuration.
        # monitor = name, res@hz, pos, scale
        ${monitorConfig}

        # The hyprland HM module generates hyprland.conf, but I want to be able to
        # edit it and receive live feedback, so I do most of my config in separate
        # sourced config file.
        source = hyprland-static.conf
      '';
  };

  # Note, usefull script
  # `hyprctl clients -j | jq '.[] | select(.xwayland == true) | {title: .title, class: .class}'`
}
